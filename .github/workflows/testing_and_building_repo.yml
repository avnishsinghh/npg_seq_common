name: testing_and_building_repo
on: [push, pull_request]
jobs:
  build: 
    strategy:
      matrix:
        os: ['ubuntu-18.04']

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l -e -o pipefail {0}
    env:
      WSI_CONDA_CHANNEL: "https://dnap.cog.sanger.ac.uk/npg/conda/devel/generic"
      CONDA_TEST_ENV: test-environment

    name: Distribution Perl on ${{ matrix.os }} 
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0' 
    
    # Caching conda
    - name: Cache conda
      id: minicondaCache
      uses: actions/cache@v2
      with:
        path: |
          ~/conda/pkgs
          ~/conda/envs
        key: ${{ matrix.os }}-build-miniconda
    
   # Caching cpanm external modules
    - name: Cache cpanm external modules
      id: cpanmCache
      uses: actions/cache@v2
      with:
        path: ~/perl5ext  
        key: ${{ matrix.os }}-build-cpanm-external

    - name: Initialize Miniconda
      run: |
          echo 'source $CONDA/etc/profile.d/conda.sh' >> "$HOME/.bash_profile"

    - name: install libgd-dev and uuid-dev 
      run:
          sudo apt-get install -y libgd-dev  uuid-dev 
   
    - name: install cpanm
      run: |
          wget -qO - https://cpanmin.us | /usr/bin/perl - --sudo App::cpanminus 

    - name: run Before_install.sh
      run: |
          ${GITHUB_WORKSPACE}/scripts/before_install.sh

    - name: install conda client, baton,samtools, set up conda environment
      run: |
          conda config --prepend pkgs_dirs ~/conda/pkgs
          conda config --prepend envs_dirs ~/conda/envs

          conda config --set auto_update_conda False
          conda config --prepend channels "$WSI_CONDA_CHANNEL"
          conda config --append channels conda-forge
          conda info

          conda create -y --name "$CONDA_TEST_ENV" 
          conda install --name "$CONDA_TEST_ENV" biobambam2
      env:
        CONDA_CHANNEL: https://dnap.cog.sanger.ac.uk/npg/conda/devel/generic
          
    - name: install perl deps
      run: |
          cpanm --local-lib=~/perl5ext local::lib && eval $(perl -I ~/perl5ext/lib/perl5/ -Mlocal::lib)
          ${GITHUB_WORKSPACE}/scripts/install_perl_deps.sh $WTSI_NPG_GITHUB_URL $WTSI_NPG_BUILD_BRANCH
      env:
        WTSI_NPG_GITHUB_URL: https://github.com/wtsi-npg
        WTSI_NPG_BUILD_BRANCH: ${GITHUB_HEAD_REF}
   
    - name: install cpanm dependencies
      run: |
          eval $(perl -I ~/perl5ext/lib/perl5/ -Mlocal::lib=~/perl5npg)
          eval $(perl -I ~/perl5ext/lib/perl5/ -Mlocal::lib=~/perl5ext)
          cpanm --installdeps .
          
    - name: change shell used in system call
      run: |
          sudo rm /bin/sh
          sudo ln -s /bin/bash /bin/sh

    - name: run Build.PL and ./Build
      run: |
          eval $(perl -I ~/perl5ext/lib/perl5/ -Mlocal::lib=~/perl5ext)
          eval $(perl -I ~/perl5ext/lib/perl5/ -Mlocal::lib=~/perl5npg)
          export TEST_AUTHOR=1
          conda activate "$CONDA_TEST_ENV"
          perl Build.PL && ./Build test --verbose && ./Build install
      env:
        MACHTYPE: "`uname -m`"
        
    # Archive logs if failure
    - name: Archive CPAN logs
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: cpan_log
        path: /home/runner/.cpanm/work/*/build.log
        retention-days: 5 
